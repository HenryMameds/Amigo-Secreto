CREATE OR REPLACE PROCEDURE sp_update_participante(
vCod participante.cd_participante%type
,vNome participante.nome_participante%type
,vApelido participante.apelido_participante%type
,vSugestao participante.cd_sugestao%type
,vDepartamento participante.cd_departamento%type
) IS

vCount number(5);
erUnique EXCEPTION;
erFk EXCEPTION;
PRAGMA EXCEPTION_INIT(erFk, -02291);
BEGIN
        
    SELECT COUNT(apelido_participante) INTO vCount FROM participante where apelido_participante = vApelido;
    IF (vCount > 0) THEN RAISE erUnique; END IF;
    
    UPDATE participante SET
        nome_participante = vNome, apelido_participante = vApelido, cd_sugestao = vSugestao, cd_departamento = vDepartamento
    WHERE
        cd_participante = vCod;
    
    DBMS_OUTPUT.PUT_LINE('Participante de código [' || vCod ||  ']' || 'atualizado com sucesso!');
    
    EXCEPTION                 
        WHEN NO_DATA_FOUND THEN

            RAISE_APPLICATION_ERROR(-20001, 'Erro ao tentar atualizar participante de código [' || vCod || ']' || chr(10) || 'Verifique se o codigo de'  
                || chr(10) || 'Verifique se o codigo de Participante,  Departamento ou Sugestão informados são válidos.'); 

        WHEN erFK THEN

        RAISE_APPLICATION_ERROR(-20002, 'Erro ao tentar atualiazar participante de código [' || vCod || ']' 
            || chr(10) || 'Verifique se o codigo de Participante, Departamento ou Sugestão informados são válidos.'); 

        WHEN erUnique THEN

          RAISE_APPLICATION_ERROR(-20210, 'Erro ao tentar atualizar,  apelido [' || vApelido || ']' || ' já está sendo utilizado!');

        WHEN OTHERS THEN

            RAISE_APPLICATION_ERROR(-20003, 'Erro desconhecido ao tentar atualizar participante de código [' || vCod || ']');

END sp_update_participante;